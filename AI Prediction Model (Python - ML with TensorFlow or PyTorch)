import numpy as np
import tensorflow as tf

# Create a simple model
model = tf.keras.models.Sequential([
    tf.keras.layers.Dense(32, activation='relu', input_shape=(3,)),
    tf.keras.layers.Dense(16, activation='relu'),
    tf.keras.layers.Dense(1, activation='sigmoid')  # binary output for risk
])

model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

# Mock data for training (normally you'd use real health data)
X_train = np.random.rand(1000, 3)  # 1000 samples, 3 features (heart rate, bp, glucose)
y_train = np.random.randint(0, 2, 1000)  # 1000 samples, binary target

# Train the model
model.fit(X_train, y_train, epochs=10)

# Save the model
model.save("health_risk_model.h5")

def predict_risk(data):
    """Predict risk based on health data."""
    data = np.array(data).reshape(1, -1)
    prediction = model.predict(data)
    risk_level = "high" if prediction[0] > 0.5 else "low"
    return risk_level
